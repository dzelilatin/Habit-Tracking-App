{"ast":null,"code":"var _jsxFileName = \"/Users/dzelitin/Desktop/Habit-Tracking-App/activity-app/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [activities, setActivities] = useState([]);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const decodedToken = jwtDecode(token);\n    const email = decodedToken.email;\n    const url = `http://localhost:3016/users/email/${email}`;\n    axios.get(url).then(response => {\n      const user = response.data;\n      setActivities(user.activities);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const currentTime = new Date();\n  const getDayCellClassName = dayOfWeek => {\n    if (dayOfWeek === currentTime.getDay()) {\n      return 'current-day';\n    }\n    return '';\n  };\n  const startHour = currentTime.getHours() - 3;\n  const endHour = currentTime.getHours() + 8;\n  const options = {\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric'\n  };\n  const date = new Date().toLocaleDateString(undefined, options);\n  const currentDay = currentTime.getDay();\n  const currentDayName = daysOfWeek[currentDay - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), daysOfWeek.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: `${getDayCellClassName(daysOfWeek.indexOf(day))} lg:cell-with-border`,\n              children: day.slice(0, 3)\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Array.from({\n            length: 24\n          }, (_, index) => {\n            const hour = index;\n            const isWithinRange = hour >= startHour && hour <= endHour;\n            if (!isWithinRange) {\n              return null;\n            }\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [hour, \":00 \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this), daysOfWeek.map(day => {\n                const matchingActivities = activities.filter(activity => activity.timestamps.some(timestamp => {\n                  const startHour = parseInt(timestamp.startTime.split(':')[0]);\n                  const endHour = parseInt(timestamp.endTime.split(':')[0]);\n                  return timestamp.day === day && hour >= startHour && hour <= endHour;\n                }));\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: `${getDayCellClassName(daysOfWeek.indexOf(day))} cell-with-border`,\n                  children: matchingActivities.map((activity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      backgroundColor: activity.color\n                    },\n                    className: \"activity\",\n                    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                      className: \"lg:flex text-center hidden\",\n                      children: activity.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 29\n                    }, this)\n                  }, activity.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 27\n                  }, this))\n                }, day, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, hour, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"U7cZ1/YYUxsshQ9dIjQsAX2PDAw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","Calendar","_s","activities","setActivities","token","localStorage","getItem","decodedToken","email","url","get","then","response","user","data","catch","error","console","daysOfWeek","currentTime","Date","getDayCellClassName","dayOfWeek","getDay","startHour","getHours","endHour","options","day","month","year","date","toLocaleDateString","undefined","currentDay","currentDayName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","indexOf","slice","Array","from","length","_","index","hour","isWithinRange","matchingActivities","filter","activity","timestamps","some","timestamp","parseInt","startTime","split","endTime","style","backgroundColor","color","name","id","_c","$RefreshReg$"],"sources":["/Users/dzelitin/Desktop/Habit-Tracking-App/activity-app/src/components/Calendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst Calendar = () => {\r\n  const [activities, setActivities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const decodedToken = jwtDecode(token);\r\n    const email = decodedToken.email;\r\n    const url = `http://localhost:3016/users/email/${email}`;\r\n\r\n    axios\r\n      .get(url)\r\n      .then(response => {\r\n        const user = response.data;\r\n        setActivities(user.activities);\r\n      })\r\n      .catch(error => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const daysOfWeek = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\r\n  const currentTime = new Date();\r\n\r\n  const getDayCellClassName = (dayOfWeek) => {\r\n    if (dayOfWeek === currentTime.getDay()) {\r\n      return 'current-day';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const startHour = currentTime.getHours() - 3;\r\n  const endHour = currentTime.getHours() + 8;\r\n\r\n  const options = { day: 'numeric', month: 'long', year: 'numeric' };\r\n  const date = new Date().toLocaleDateString(undefined, options);\r\n\r\n  const currentDay = currentTime.getDay();\r\n  const currentDayName = daysOfWeek[currentDay-1];\r\n\r\n  return (\r\n    <div className='calendar'>\r\n      <h1 >Your Calendar</h1>\r\n      <h3>\r\n           {date}\r\n      </h3>\r\n      \r\n      <div className=\"calendar-container\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              {daysOfWeek.map((day) => (\r\n                <th key={day} className={`${getDayCellClassName(daysOfWeek.indexOf(day))} lg:cell-with-border`}>\r\n                  {day.slice(0, 3)}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n\r\n            {Array.from({ length: 24 }, (_, index) => {\r\n              const hour = index;\r\n              const isWithinRange = hour >= startHour && hour <= endHour;\r\n              if (!isWithinRange) {\r\n                return null;\r\n              }\r\n              return (\r\n                <tr key={hour}>\r\n                  <td>{hour}:00 </td>\r\n                  {daysOfWeek.map((day) => {\r\n                    const matchingActivities = activities.filter((activity) =>\r\n                      activity.timestamps.some((timestamp) => {\r\n                        const startHour = parseInt(timestamp.startTime.split(':')[0]);\r\n                        const endHour = parseInt(timestamp.endTime.split(':')[0]);\r\n                        return timestamp.day === day && hour >= startHour && hour <= endHour;\r\n                      })\r\n                    );\r\n\r\n                    return (\r\n                      <td\r\n                        key={day}\r\n                        className={`${getDayCellClassName(daysOfWeek.indexOf(day))} cell-with-border`}\r\n                      >\r\n                        {matchingActivities.map((activity, index) => (\r\n                          <div\r\n                            key={activity.id}\r\n                            style={{ backgroundColor: activity.color }}\r\n                            className=\"activity\"\r\n                          >\r\n                            <h2 className='lg:flex text-center hidden'>{activity.name}</h2>\r\n                          </div>\r\n                        ))}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}